@model Open.GI.hypermart.Models.Product
@{
    ViewBag.Title = "Create";
}









<h2>Create</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "dropzone", id = "dropzoneform", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tagline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tagline, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tagline, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lead, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lead, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lead, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Screenshots, htmlAttributes: new { @class = "control-label col-md-2" })
            
        </div>

        <div class="dropzone-previews"></div>
       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="saveProduct" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

    $(document).ready(function () {
        console.log("ready!");
        $('input[type="submit"]').prop('disabled', true);
        //-

        Dropzone.options.dropzoneform = { // The camelized version of the ID of the form element

            // The configuration we've talked about above
            autoProcessQueue: false,
            enqueueForUpload:false,
            uploadMultiple: true,
            addRemoveLinks: true,
            maxFiles: 10,
            parallelUploads: 10,
            maxFilesize:1,
            init: function ()
            {
                var myDropzone = this;
                console.log("DropZone Initialization");

                // Bypass the standard Submit button - process the queue first.
                $('input[type="submit"]').on("click", function (e)
                {
                    e.preventDefault();
                    e.stopPropagation
                    myDropzone.processQueue();

                });

                myDropzone.on("addedfile", function () {
                    $('input[type="submit"]').prop('disabled', false);
                    // Show submit button here and/or inform user to click it.
                });

                myDropzone.on("dragstart", function () {
                    $('input[type="submit"]').prop('disabled', true);
                    // Show submit button here and/or inform user to click it.
                });


                myDropzone.on("drop", function () {
                    $('input[type="submit"]').prop('disabled', true);
                    // Show submit button here and/or inform user to click it.
                });


            }


        };

        //-


    });

    //File Upload response from the server

</script>

}
